# =========================================================================
# THIS FILE IS AUTOMATICALLY GENERATED BY MINILLA.
# DO NOT EDIT DIRECTLY.
# =========================================================================

use 5.008_001;

use strict;
use warnings;
use utf8;

use Module::Build;
use File::Basename;
use File::Spec;

my %args = (
    license              => 'perl',
    dynamic_config       => 0,

    configure_requires => {
        'Module::Build' => 0.38,
        'File::ShareDir' => 1.102,
    },

    name            => 'Cmd-Dwarf',
    module_name     => 'Cmd::Dwarf',
    allow_pureperl => 0,

    script_files => [glob('bin/dwarf')],
    c_source     => [qw()],
    PL_files => {},

    test_files           => ((-d '.git' || $ENV{RELEASE_TESTING}) && -d 'xt') ? 't/ xt/' : 't/',
    recursive_test_files => 1,
);
if (-d 'share') {
    $args{share_dir} = 'share';
}

my $builder = Module::Build->subclass(
    class => 'MyBuilder',
    code => q{
        use File::ShareDir ':ALL';

        sub ACTION_clean {
            my $self = shift;
            my $dir = dist_dir('Cmd-Dwarf');
            if (-d $dir) {
                system("rm -rf $dir");
            }
            $self->SUPER::ACTION_clean;
        }

        sub ACTION_install {
            my $self = shift;
            my $dir = dist_dir('Cmd-Dwarf');
            if (-d $dir) {
                system("rm -rf $dir");
            }
            $self->SUPER::ACTION_install;
        }

        sub ACTION_distmeta {
            die "Do not run distmeta. Install Minilla and `minil install` instead.\n";
        }

        sub ACTION_installdeps {
            die "Do not run installdeps. Run `cpanm --installdeps .` instead.\n";
        }
    }
)->new(%args);
$builder->create_build_script();

use File::Copy;

print "cp META.json MYMETA.json\n";
copy("META.json","MYMETA.json") or die "Copy failed(META.json): $!";

if (-f 'META.yml') {
    print "cp META.yml MYMETA.yml\n";
    copy("META.yml","MYMETA.yml") or die "Copy failed(META.yml): $!";
} else {
    print "There is no META.yml... You may install this module from the repository...\n";
}

